#!/bin/python3
import urllib3, os.path
connection_pool=urllib3.PoolManager()
#1-Chargement des données externe dans le script:
#Lecture du fichiers contenant les informations sur les scans
with open("/home/mawena/bin/.mangadown/scan_down.md", "r") as file:
    file_text=file.read()
manga_list,start,end=[],1,1
print("Liste des mangas:")
for line in file_text.split("\n"):
    manga_list.append(line.split("] : ["))
    manga_list[-1][0],manga_list[-1][-1]=manga_list[-1][0][1:],manga_list[-1][-1][:-1]   #On éfface le premier caractère de la première chaîne de caractères et le dernier caractère de la dernière chaîne de caractères
    print(str(len(manga_list))+"-"+manga_list[-1][0]) #On affiche le nom du scan

#2-Demande et vérification des informations de téléchargement:
#Gestion du numéro de manga et ses bugs:
while(True):
    try:
        manga_num=int(input("\nEntrez le numéro du manga à télécharger:"))-1
        if(manga_num<0 or manga_num> len(manga_list)-1):
            print("Veuillez entrer un nombre compris entre 1 et "+str(len(manga_list)))
        else:
            break
    except TypeError:
        print("Veuillez entrer un entier compris entre 1 et "+str(len(manga_list))+"\n")
    except ValueError:
        print("Veuillez entrer un entier compris entre 1 et "+str(len(manga_list))+"\n")

nom,url,scan_path,extensions,nbre_zero,lang = manga_list[manga_num]    #Definition de variable après lecture des informations
nbre_zero=int(nbre_zero)
#Gestion des chapitres et ses bugs:
while(True):
    try:
        start,end=input("Entrez les chapitres de comencement et de fin séparés par un espace:").split(" ")
        start,end=int(start),int(end)
        if(start<0 or end<1):
            print("Les chapitres doivent êtres supérieures à 0\n")
        elif(start>end):
            print("Le chapitre de début doit être inférieur à celui de fin\n")
        else:
            break
    except TypeError:
        print("Les chapitres doivent être des entiers\n")
    except ValueError:
        print("Vous devez entrez deux Entiers séparées par un espace\n")

#3-Traitement des données et lancement des téléchargements
for chapitre in range(start,end+1):
    if(chapitre <= 9):
        more = "00"
    elif(chapitre <= 99):
        more = "0"
    else:
        more = ""
    chapitre=str(chapitre)  #On convertie le chapitre en chaine de caractère

    #Gestion du dossier de chapitre:
    if os.path.exists(scan_path+more+chapitre+lang) == False:
        print("Creation du dossier["+scan_path+more+chapitre+lang+"]")
        os.makedirs(scan_path+more+chapitre+lang) #Crée les dossiers de destination

    #Gestion du téléchargement des images:
    for extension in extensions.split("*"):    #On utilise les différentes extensions
        i=0
        while(True):
            if nbre_zero == 0:
                image = str(i)
            elif nbre_zero > 0:
                image = ""
                for j in range(0, nbre_zero):
                    image+="0"
                image = (image+str(i))[len(image+str(i))-nbre_zero-1:]

            image_url=url+chapitre+lang+"/"+image+extension #On crée l'url de téléchargement de l'image
            image_path=scan_path+more+chapitre+lang+"/"+image+extension  #On crée le chemin de sauvegarde de l'image
            # print(image_path)
            if os.path.exists(image_path):   #Si le fichier existe déja
                print("\n["+image_path+"] existe déja")
            else:   #Sinon
                resp = connection_pool.request('GET', image_url)
                if(resp.status == 404):
                    if i > 20:
                        break
                    else:
                        pass
                elif(resp.status != 404):
                    f = open (image_path, "wb")
                    f.write(resp.data)
                    f.close()
                    resp.release_conn()
                    print("\n["+image_url+"] => ["+image_path+"]")
            i+=1
#BYMawena